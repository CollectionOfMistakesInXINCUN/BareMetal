#ifndef SERIALIZE_READER_H
#define SERIALIZE_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

typedef struct flatbuffer_Segment flatbuffer_Segment_t;
typedef const flatbuffer_Segment_t *flatbuffer_Segment_struct_t;
typedef flatbuffer_Segment_t *flatbuffer_Segment_mutable_struct_t;
typedef const flatbuffer_Segment_t *flatbuffer_Segment_vec_t;
typedef flatbuffer_Segment_t *flatbuffer_Segment_mutable_vec_t;

typedef const struct flatbuffer_HardOp_table *flatbuffer_HardOp_table_t;
typedef struct flatbuffer_HardOp_table *flatbuffer_HardOp_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_HardOp_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_HardOp_mutable_vec_t;
typedef const struct flatbuffer_Cast_table *flatbuffer_Cast_table_t;
typedef struct flatbuffer_Cast_table *flatbuffer_Cast_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Cast_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Cast_mutable_vec_t;
typedef const struct flatbuffer_ImageMake_table *flatbuffer_ImageMake_table_t;
typedef struct flatbuffer_ImageMake_table *flatbuffer_ImageMake_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_ImageMake_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_ImageMake_mutable_vec_t;
typedef const struct flatbuffer_Detpost_table *flatbuffer_Detpost_table_t;
typedef struct flatbuffer_Detpost_table *flatbuffer_Detpost_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Detpost_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Detpost_mutable_vec_t;
typedef const struct flatbuffer_MInversedArray_table *flatbuffer_MInversedArray_table_t;
typedef struct flatbuffer_MInversedArray_table *flatbuffer_MInversedArray_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_MInversedArray_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_MInversedArray_mutable_vec_t;
typedef const struct flatbuffer_WarpAffine_table *flatbuffer_WarpAffine_table_t;
typedef struct flatbuffer_WarpAffine_table *flatbuffer_WarpAffine_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_WarpAffine_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_WarpAffine_mutable_vec_t;
typedef const struct flatbuffer_Input_table *flatbuffer_Input_table_t;
typedef struct flatbuffer_Input_table *flatbuffer_Input_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Input_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Input_mutable_vec_t;
typedef const struct flatbuffer_Output_table *flatbuffer_Output_table_t;
typedef struct flatbuffer_Output_table *flatbuffer_Output_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Output_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Output_mutable_vec_t;
typedef const struct flatbuffer_SwapOrder_table *flatbuffer_SwapOrder_table_t;
typedef struct flatbuffer_SwapOrder_table *flatbuffer_SwapOrder_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_SwapOrder_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_SwapOrder_mutable_vec_t;
typedef const struct flatbuffer_Resize_table *flatbuffer_Resize_table_t;
typedef struct flatbuffer_Resize_table *flatbuffer_Resize_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Resize_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Resize_mutable_vec_t;
typedef const struct flatbuffer_AlignedUnit_table *flatbuffer_AlignedUnit_table_t;
typedef struct flatbuffer_AlignedUnit_table *flatbuffer_AlignedUnit_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_AlignedUnit_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_AlignedUnit_mutable_vec_t;
typedef const struct flatbuffer_AlignAxis_table *flatbuffer_AlignAxis_table_t;
typedef struct flatbuffer_AlignAxis_table *flatbuffer_AlignAxis_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_AlignAxis_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_AlignAxis_mutable_vec_t;
typedef const struct flatbuffer_PruneAxis_table *flatbuffer_PruneAxis_table_t;
typedef struct flatbuffer_PruneAxis_table *flatbuffer_PruneAxis_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_PruneAxis_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_PruneAxis_mutable_vec_t;
typedef const struct flatbuffer_Reorg_table *flatbuffer_Reorg_table_t;
typedef struct flatbuffer_Reorg_table *flatbuffer_Reorg_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Reorg_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Reorg_mutable_vec_t;
typedef const struct flatbuffer_Add_table *flatbuffer_Add_table_t;
typedef struct flatbuffer_Add_table *flatbuffer_Add_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Add_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Add_mutable_vec_t;
typedef const struct flatbuffer_Multiply_table *flatbuffer_Multiply_table_t;
typedef struct flatbuffer_Multiply_table *flatbuffer_Multiply_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Multiply_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Multiply_mutable_vec_t;
typedef const struct flatbuffer_Yolo_table *flatbuffer_Yolo_table_t;
typedef struct flatbuffer_Yolo_table *flatbuffer_Yolo_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Yolo_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Yolo_mutable_vec_t;
typedef const struct flatbuffer_SegPost_table *flatbuffer_SegPost_table_t;
typedef struct flatbuffer_SegPost_table *flatbuffer_SegPost_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_SegPost_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_SegPost_mutable_vec_t;
typedef const struct flatbuffer_Op_table *flatbuffer_Op_table_t;
typedef struct flatbuffer_Op_table *flatbuffer_Op_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Op_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Op_mutable_vec_t;
typedef const struct flatbuffer_QuantizedType_table *flatbuffer_QuantizedType_table_t;
typedef struct flatbuffer_QuantizedType_table *flatbuffer_QuantizedType_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_QuantizedType_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_QuantizedType_mutable_vec_t;
typedef const struct flatbuffer_Normratio_table *flatbuffer_Normratio_table_t;
typedef struct flatbuffer_Normratio_table *flatbuffer_Normratio_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Normratio_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Normratio_mutable_vec_t;
typedef const struct flatbuffer_MergedAxisSection_table *flatbuffer_MergedAxisSection_table_t;
typedef struct flatbuffer_MergedAxisSection_table *flatbuffer_MergedAxisSection_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_MergedAxisSection_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_MergedAxisSection_mutable_vec_t;
typedef const struct flatbuffer_MergedAxisDistr_table *flatbuffer_MergedAxisDistr_table_t;
typedef struct flatbuffer_MergedAxisDistr_table *flatbuffer_MergedAxisDistr_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_MergedAxisDistr_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_MergedAxisDistr_mutable_vec_t;
typedef const struct flatbuffer_Ftmp_table *flatbuffer_Ftmp_table_t;
typedef struct flatbuffer_Ftmp_table *flatbuffer_Ftmp_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Ftmp_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Ftmp_mutable_vec_t;
typedef const struct flatbuffer_Network_table *flatbuffer_Network_table_t;
typedef struct flatbuffer_Network_table *flatbuffer_Network_mutable_table_t;
typedef const flatbuffers_uoffset_t *flatbuffer_Network_vec_t;
typedef flatbuffers_uoffset_t *flatbuffer_Network_mutable_vec_t;
#ifndef flatbuffer_HardOp_file_identifier
#define flatbuffer_HardOp_file_identifier 0
#endif
/* deprecated, use flatbuffer_HardOp_file_identifier */
#ifndef flatbuffer_HardOp_identifier
#define flatbuffer_HardOp_identifier 0
#endif
#define flatbuffer_HardOp_type_hash ((flatbuffers_thash_t)0x86d08590)
#define flatbuffer_HardOp_type_identifier "\x90\x85\xd0\x86"
#ifndef flatbuffer_HardOp_file_extension
#define flatbuffer_HardOp_file_extension "bin"
#endif
#ifndef flatbuffer_Cast_file_identifier
#define flatbuffer_Cast_file_identifier 0
#endif
/* deprecated, use flatbuffer_Cast_file_identifier */
#ifndef flatbuffer_Cast_identifier
#define flatbuffer_Cast_identifier 0
#endif
#define flatbuffer_Cast_type_hash ((flatbuffers_thash_t)0x2ab7e685)
#define flatbuffer_Cast_type_identifier "\x85\xe6\xb7\x2a"
#ifndef flatbuffer_Cast_file_extension
#define flatbuffer_Cast_file_extension "bin"
#endif
#ifndef flatbuffer_ImageMake_file_identifier
#define flatbuffer_ImageMake_file_identifier 0
#endif
/* deprecated, use flatbuffer_ImageMake_file_identifier */
#ifndef flatbuffer_ImageMake_identifier
#define flatbuffer_ImageMake_identifier 0
#endif
#define flatbuffer_ImageMake_type_hash ((flatbuffers_thash_t)0xd1f9ffe1)
#define flatbuffer_ImageMake_type_identifier "\xe1\xff\xf9\xd1"
#ifndef flatbuffer_ImageMake_file_extension
#define flatbuffer_ImageMake_file_extension "bin"
#endif
#ifndef flatbuffer_Detpost_file_identifier
#define flatbuffer_Detpost_file_identifier 0
#endif
/* deprecated, use flatbuffer_Detpost_file_identifier */
#ifndef flatbuffer_Detpost_identifier
#define flatbuffer_Detpost_identifier 0
#endif
#define flatbuffer_Detpost_type_hash ((flatbuffers_thash_t)0xfdc87011)
#define flatbuffer_Detpost_type_identifier "\x11\x70\xc8\xfd"
#ifndef flatbuffer_Detpost_file_extension
#define flatbuffer_Detpost_file_extension "bin"
#endif
#ifndef flatbuffer_MInversedArray_file_identifier
#define flatbuffer_MInversedArray_file_identifier 0
#endif
/* deprecated, use flatbuffer_MInversedArray_file_identifier */
#ifndef flatbuffer_MInversedArray_identifier
#define flatbuffer_MInversedArray_identifier 0
#endif
#define flatbuffer_MInversedArray_type_hash ((flatbuffers_thash_t)0x6ec096ba)
#define flatbuffer_MInversedArray_type_identifier "\xba\x96\xc0\x6e"
#ifndef flatbuffer_MInversedArray_file_extension
#define flatbuffer_MInversedArray_file_extension "bin"
#endif
#ifndef flatbuffer_WarpAffine_file_identifier
#define flatbuffer_WarpAffine_file_identifier 0
#endif
/* deprecated, use flatbuffer_WarpAffine_file_identifier */
#ifndef flatbuffer_WarpAffine_identifier
#define flatbuffer_WarpAffine_identifier 0
#endif
#define flatbuffer_WarpAffine_type_hash ((flatbuffers_thash_t)0x30c13da3)
#define flatbuffer_WarpAffine_type_identifier "\xa3\x3d\xc1\x30"
#ifndef flatbuffer_WarpAffine_file_extension
#define flatbuffer_WarpAffine_file_extension "bin"
#endif
#ifndef flatbuffer_Input_file_identifier
#define flatbuffer_Input_file_identifier 0
#endif
/* deprecated, use flatbuffer_Input_file_identifier */
#ifndef flatbuffer_Input_identifier
#define flatbuffer_Input_identifier 0
#endif
#define flatbuffer_Input_type_hash ((flatbuffers_thash_t)0x3ec65bc2)
#define flatbuffer_Input_type_identifier "\xc2\x5b\xc6\x3e"
#ifndef flatbuffer_Input_file_extension
#define flatbuffer_Input_file_extension "bin"
#endif
#ifndef flatbuffer_Output_file_identifier
#define flatbuffer_Output_file_identifier 0
#endif
/* deprecated, use flatbuffer_Output_file_identifier */
#ifndef flatbuffer_Output_identifier
#define flatbuffer_Output_identifier 0
#endif
#define flatbuffer_Output_type_hash ((flatbuffers_thash_t)0xffbd9897)
#define flatbuffer_Output_type_identifier "\x97\x98\xbd\xff"
#ifndef flatbuffer_Output_file_extension
#define flatbuffer_Output_file_extension "bin"
#endif
#ifndef flatbuffer_SwapOrder_file_identifier
#define flatbuffer_SwapOrder_file_identifier 0
#endif
/* deprecated, use flatbuffer_SwapOrder_file_identifier */
#ifndef flatbuffer_SwapOrder_identifier
#define flatbuffer_SwapOrder_identifier 0
#endif
#define flatbuffer_SwapOrder_type_hash ((flatbuffers_thash_t)0x63732acb)
#define flatbuffer_SwapOrder_type_identifier "\xcb\x2a\x73\x63"
#ifndef flatbuffer_SwapOrder_file_extension
#define flatbuffer_SwapOrder_file_extension "bin"
#endif
#ifndef flatbuffer_Resize_file_identifier
#define flatbuffer_Resize_file_identifier 0
#endif
/* deprecated, use flatbuffer_Resize_file_identifier */
#ifndef flatbuffer_Resize_identifier
#define flatbuffer_Resize_identifier 0
#endif
#define flatbuffer_Resize_type_hash ((flatbuffers_thash_t)0xce3fca72)
#define flatbuffer_Resize_type_identifier "\x72\xca\x3f\xce"
#ifndef flatbuffer_Resize_file_extension
#define flatbuffer_Resize_file_extension "bin"
#endif
#ifndef flatbuffer_AlignedUnit_file_identifier
#define flatbuffer_AlignedUnit_file_identifier 0
#endif
/* deprecated, use flatbuffer_AlignedUnit_file_identifier */
#ifndef flatbuffer_AlignedUnit_identifier
#define flatbuffer_AlignedUnit_identifier 0
#endif
#define flatbuffer_AlignedUnit_type_hash ((flatbuffers_thash_t)0x37747248)
#define flatbuffer_AlignedUnit_type_identifier "\x48\x72\x74\x37"
#ifndef flatbuffer_AlignedUnit_file_extension
#define flatbuffer_AlignedUnit_file_extension "bin"
#endif
#ifndef flatbuffer_AlignAxis_file_identifier
#define flatbuffer_AlignAxis_file_identifier 0
#endif
/* deprecated, use flatbuffer_AlignAxis_file_identifier */
#ifndef flatbuffer_AlignAxis_identifier
#define flatbuffer_AlignAxis_identifier 0
#endif
#define flatbuffer_AlignAxis_type_hash ((flatbuffers_thash_t)0x8df00aca)
#define flatbuffer_AlignAxis_type_identifier "\xca\x0a\xf0\x8d"
#ifndef flatbuffer_AlignAxis_file_extension
#define flatbuffer_AlignAxis_file_extension "bin"
#endif
#ifndef flatbuffer_PruneAxis_file_identifier
#define flatbuffer_PruneAxis_file_identifier 0
#endif
/* deprecated, use flatbuffer_PruneAxis_file_identifier */
#ifndef flatbuffer_PruneAxis_identifier
#define flatbuffer_PruneAxis_identifier 0
#endif
#define flatbuffer_PruneAxis_type_hash ((flatbuffers_thash_t)0x3287cd0f)
#define flatbuffer_PruneAxis_type_identifier "\x0f\xcd\x87\x32"
#ifndef flatbuffer_PruneAxis_file_extension
#define flatbuffer_PruneAxis_file_extension "bin"
#endif
#ifndef flatbuffer_Reorg_file_identifier
#define flatbuffer_Reorg_file_identifier 0
#endif
/* deprecated, use flatbuffer_Reorg_file_identifier */
#ifndef flatbuffer_Reorg_identifier
#define flatbuffer_Reorg_identifier 0
#endif
#define flatbuffer_Reorg_type_hash ((flatbuffers_thash_t)0xbddfa9ef)
#define flatbuffer_Reorg_type_identifier "\xef\xa9\xdf\xbd"
#ifndef flatbuffer_Reorg_file_extension
#define flatbuffer_Reorg_file_extension "bin"
#endif
#ifndef flatbuffer_Add_file_identifier
#define flatbuffer_Add_file_identifier 0
#endif
/* deprecated, use flatbuffer_Add_file_identifier */
#ifndef flatbuffer_Add_identifier
#define flatbuffer_Add_identifier 0
#endif
#define flatbuffer_Add_type_hash ((flatbuffers_thash_t)0x98c7c9dd)
#define flatbuffer_Add_type_identifier "\xdd\xc9\xc7\x98"
#ifndef flatbuffer_Add_file_extension
#define flatbuffer_Add_file_extension "bin"
#endif
#ifndef flatbuffer_Multiply_file_identifier
#define flatbuffer_Multiply_file_identifier 0
#endif
/* deprecated, use flatbuffer_Multiply_file_identifier */
#ifndef flatbuffer_Multiply_identifier
#define flatbuffer_Multiply_identifier 0
#endif
#define flatbuffer_Multiply_type_hash ((flatbuffers_thash_t)0x4b9aecc6)
#define flatbuffer_Multiply_type_identifier "\xc6\xec\x9a\x4b"
#ifndef flatbuffer_Multiply_file_extension
#define flatbuffer_Multiply_file_extension "bin"
#endif
#ifndef flatbuffer_Yolo_file_identifier
#define flatbuffer_Yolo_file_identifier 0
#endif
/* deprecated, use flatbuffer_Yolo_file_identifier */
#ifndef flatbuffer_Yolo_identifier
#define flatbuffer_Yolo_identifier 0
#endif
#define flatbuffer_Yolo_type_hash ((flatbuffers_thash_t)0x66dc7bb)
#define flatbuffer_Yolo_type_identifier "\xbb\xc7\x6d\x06"
#ifndef flatbuffer_Yolo_file_extension
#define flatbuffer_Yolo_file_extension "bin"
#endif
#ifndef flatbuffer_SegPost_file_identifier
#define flatbuffer_SegPost_file_identifier 0
#endif
/* deprecated, use flatbuffer_SegPost_file_identifier */
#ifndef flatbuffer_SegPost_identifier
#define flatbuffer_SegPost_identifier 0
#endif
#define flatbuffer_SegPost_type_hash ((flatbuffers_thash_t)0x9f12f25)
#define flatbuffer_SegPost_type_identifier "\x25\x2f\xf1\x09"
#ifndef flatbuffer_SegPost_file_extension
#define flatbuffer_SegPost_file_extension "bin"
#endif
#ifndef flatbuffer_Op_file_identifier
#define flatbuffer_Op_file_identifier 0
#endif
/* deprecated, use flatbuffer_Op_file_identifier */
#ifndef flatbuffer_Op_identifier
#define flatbuffer_Op_identifier 0
#endif
#define flatbuffer_Op_type_hash ((flatbuffers_thash_t)0x561f5a69)
#define flatbuffer_Op_type_identifier "\x69\x5a\x1f\x56"
#ifndef flatbuffer_Op_file_extension
#define flatbuffer_Op_file_extension "bin"
#endif
#ifndef flatbuffer_QuantizedType_file_identifier
#define flatbuffer_QuantizedType_file_identifier 0
#endif
/* deprecated, use flatbuffer_QuantizedType_file_identifier */
#ifndef flatbuffer_QuantizedType_identifier
#define flatbuffer_QuantizedType_identifier 0
#endif
#define flatbuffer_QuantizedType_type_hash ((flatbuffers_thash_t)0xa40e2e3f)
#define flatbuffer_QuantizedType_type_identifier "\x3f\x2e\x0e\xa4"
#ifndef flatbuffer_QuantizedType_file_extension
#define flatbuffer_QuantizedType_file_extension "bin"
#endif
#ifndef flatbuffer_Normratio_file_identifier
#define flatbuffer_Normratio_file_identifier 0
#endif
/* deprecated, use flatbuffer_Normratio_file_identifier */
#ifndef flatbuffer_Normratio_identifier
#define flatbuffer_Normratio_identifier 0
#endif
#define flatbuffer_Normratio_type_hash ((flatbuffers_thash_t)0xb307dc13)
#define flatbuffer_Normratio_type_identifier "\x13\xdc\x07\xb3"
#ifndef flatbuffer_Normratio_file_extension
#define flatbuffer_Normratio_file_extension "bin"
#endif
#ifndef flatbuffer_MergedAxisSection_file_identifier
#define flatbuffer_MergedAxisSection_file_identifier 0
#endif
/* deprecated, use flatbuffer_MergedAxisSection_file_identifier */
#ifndef flatbuffer_MergedAxisSection_identifier
#define flatbuffer_MergedAxisSection_identifier 0
#endif
#define flatbuffer_MergedAxisSection_type_hash ((flatbuffers_thash_t)0x22316a66)
#define flatbuffer_MergedAxisSection_type_identifier "\x66\x6a\x31\x22"
#ifndef flatbuffer_MergedAxisSection_file_extension
#define flatbuffer_MergedAxisSection_file_extension "bin"
#endif
#ifndef flatbuffer_MergedAxisDistr_file_identifier
#define flatbuffer_MergedAxisDistr_file_identifier 0
#endif
/* deprecated, use flatbuffer_MergedAxisDistr_file_identifier */
#ifndef flatbuffer_MergedAxisDistr_identifier
#define flatbuffer_MergedAxisDistr_identifier 0
#endif
#define flatbuffer_MergedAxisDistr_type_hash ((flatbuffers_thash_t)0x85520303)
#define flatbuffer_MergedAxisDistr_type_identifier "\x03\x03\x52\x85"
#ifndef flatbuffer_MergedAxisDistr_file_extension
#define flatbuffer_MergedAxisDistr_file_extension "bin"
#endif
#ifndef flatbuffer_Ftmp_file_identifier
#define flatbuffer_Ftmp_file_identifier 0
#endif
/* deprecated, use flatbuffer_Ftmp_file_identifier */
#ifndef flatbuffer_Ftmp_identifier
#define flatbuffer_Ftmp_identifier 0
#endif
#define flatbuffer_Ftmp_type_hash ((flatbuffers_thash_t)0x4a8e40d1)
#define flatbuffer_Ftmp_type_identifier "\xd1\x40\x8e\x4a"
#ifndef flatbuffer_Ftmp_file_extension
#define flatbuffer_Ftmp_file_extension "bin"
#endif
#ifndef flatbuffer_Segment_file_identifier
#define flatbuffer_Segment_file_identifier 0
#endif
/* deprecated, use flatbuffer_Segment_file_identifier */
#ifndef flatbuffer_Segment_identifier
#define flatbuffer_Segment_identifier 0
#endif
#define flatbuffer_Segment_type_hash ((flatbuffers_thash_t)0x21beca47)
#define flatbuffer_Segment_type_identifier "\x47\xca\xbe\x21"
#ifndef flatbuffer_Segment_file_extension
#define flatbuffer_Segment_file_extension "bin"
#endif
#ifndef flatbuffer_Network_file_identifier
#define flatbuffer_Network_file_identifier 0
#endif
/* deprecated, use flatbuffer_Network_file_identifier */
#ifndef flatbuffer_Network_identifier
#define flatbuffer_Network_identifier 0
#endif
#define flatbuffer_Network_type_hash ((flatbuffers_thash_t)0xfad7c0bc)
#define flatbuffer_Network_type_identifier "\xbc\xc0\xd7\xfa"
#ifndef flatbuffer_Network_file_extension
#define flatbuffer_Network_file_extension "bin"
#endif


struct flatbuffer_Segment {
    alignas(4) uint32_t ftmp_segment_logic_addr;
    alignas(4) uint32_t ftmp_segment_phy_addr;
    alignas(4) uint32_t ftmp_segment_bytesize;
    alignas(4) uint32_t input_segment_logic_addr;
    alignas(4) uint32_t input_segment_phy_addr;
    alignas(4) uint32_t input_segment_bytesize;
    alignas(4) uint32_t instr_segment_logic_addr;
    alignas(4) uint32_t instr_segment_phy_addr;
    alignas(4) uint32_t instr_segment_bytesize;
    alignas(4) uint32_t output_segment_logic_addr;
    alignas(4) uint32_t output_segment_phy_addr;
    alignas(4) uint32_t output_segment_bytesize;
    alignas(4) uint32_t params_segment_logic_addr;
    alignas(4) uint32_t params_segment_phy_addr;
    alignas(4) uint32_t params_segment_bytesize;
    alignas(4) uint32_t ftmp_chunk_begin;
    alignas(4) uint32_t ftmp_chunk_bytesize;
    alignas(4) uint32_t input_chunk_begin;
    alignas(4) uint32_t input_chunk_bytesize;
    alignas(4) uint32_t instr_chunk_begin;
    alignas(4) uint32_t instr_chunk_bytesize;
    alignas(4) uint32_t output_chunk_begin;
    alignas(4) uint32_t output_chunk_bytesize;
    alignas(4) uint32_t params_chunk_begin;
    alignas(4) uint32_t params_chunk_bytesize;
};
static_assert(sizeof(flatbuffer_Segment_t) == 100, "struct size mismatch");

static inline const flatbuffer_Segment_t *flatbuffer_Segment__const_ptr_add(const flatbuffer_Segment_t *p, size_t i) { return p + i; }
static inline flatbuffer_Segment_t *flatbuffer_Segment__ptr_add(flatbuffer_Segment_t *p, size_t i) { return p + i; }
static inline flatbuffer_Segment_struct_t flatbuffer_Segment_vec_at(flatbuffer_Segment_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t flatbuffer_Segment__size(void) { return 100; }
static inline size_t flatbuffer_Segment_vec_len(flatbuffer_Segment_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(flatbuffer_Segment)

__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, ftmp_segment_logic_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, ftmp_segment_phy_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, ftmp_segment_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, input_segment_logic_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, input_segment_phy_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, input_segment_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, instr_segment_logic_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, instr_segment_phy_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, instr_segment_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, output_segment_logic_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, output_segment_phy_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, output_segment_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, params_segment_logic_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, params_segment_phy_addr, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, params_segment_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, ftmp_chunk_begin, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, ftmp_chunk_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, input_chunk_begin, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, input_chunk_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, instr_chunk_begin, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, instr_chunk_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, output_chunk_begin, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, output_chunk_bytesize, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, params_chunk_begin, flatbuffers_uint32, uint32_t)
__flatbuffers_define_struct_scalar_field(flatbuffer_Segment, params_chunk_bytesize, flatbuffers_uint32, uint32_t)

typedef uint8_t flatbuffer_Attribute_union_type_t;
__flatbuffers_define_integer_type(flatbuffer_Attribute, flatbuffer_Attribute_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, flatbuffer_Attribute)
#define flatbuffer_Attribute_NONE ((flatbuffer_Attribute_union_type_t)UINT8_C(0))
#define flatbuffer_Attribute_HardOp ((flatbuffer_Attribute_union_type_t)UINT8_C(1))
#define flatbuffer_Attribute_Cast ((flatbuffer_Attribute_union_type_t)UINT8_C(2))
#define flatbuffer_Attribute_ImageMake ((flatbuffer_Attribute_union_type_t)UINT8_C(3))
#define flatbuffer_Attribute_Detpost ((flatbuffer_Attribute_union_type_t)UINT8_C(4))
#define flatbuffer_Attribute_Input ((flatbuffer_Attribute_union_type_t)UINT8_C(5))
#define flatbuffer_Attribute_Output ((flatbuffer_Attribute_union_type_t)UINT8_C(6))
#define flatbuffer_Attribute_SwapOrder ((flatbuffer_Attribute_union_type_t)UINT8_C(7))
#define flatbuffer_Attribute_Resize ((flatbuffer_Attribute_union_type_t)UINT8_C(8))
#define flatbuffer_Attribute_AlignAxis ((flatbuffer_Attribute_union_type_t)UINT8_C(9))
#define flatbuffer_Attribute_PruneAxis ((flatbuffer_Attribute_union_type_t)UINT8_C(10))
#define flatbuffer_Attribute_Reorg ((flatbuffer_Attribute_union_type_t)UINT8_C(11))
#define flatbuffer_Attribute_Add ((flatbuffer_Attribute_union_type_t)UINT8_C(12))
#define flatbuffer_Attribute_Multiply ((flatbuffer_Attribute_union_type_t)UINT8_C(13))
#define flatbuffer_Attribute_Yolo ((flatbuffer_Attribute_union_type_t)UINT8_C(14))
#define flatbuffer_Attribute_SegPost ((flatbuffer_Attribute_union_type_t)UINT8_C(15))
#define flatbuffer_Attribute_WarpAffine ((flatbuffer_Attribute_union_type_t)UINT8_C(16))

static inline const char *flatbuffer_Attribute_type_name(flatbuffer_Attribute_union_type_t type)
{
    switch (type) {
    case flatbuffer_Attribute_NONE: return "NONE";
    case flatbuffer_Attribute_HardOp: return "HardOp";
    case flatbuffer_Attribute_Cast: return "Cast";
    case flatbuffer_Attribute_ImageMake: return "ImageMake";
    case flatbuffer_Attribute_Detpost: return "Detpost";
    case flatbuffer_Attribute_Input: return "Input";
    case flatbuffer_Attribute_Output: return "Output";
    case flatbuffer_Attribute_SwapOrder: return "SwapOrder";
    case flatbuffer_Attribute_Resize: return "Resize";
    case flatbuffer_Attribute_AlignAxis: return "AlignAxis";
    case flatbuffer_Attribute_PruneAxis: return "PruneAxis";
    case flatbuffer_Attribute_Reorg: return "Reorg";
    case flatbuffer_Attribute_Add: return "Add";
    case flatbuffer_Attribute_Multiply: return "Multiply";
    case flatbuffer_Attribute_Yolo: return "Yolo";
    case flatbuffer_Attribute_SegPost: return "SegPost";
    case flatbuffer_Attribute_WarpAffine: return "WarpAffine";
    default: return "";
    }
}

static inline int flatbuffer_Attribute_is_known_type(flatbuffer_Attribute_union_type_t type)
{
    switch (type) {
    case flatbuffer_Attribute_NONE: return 1;
    case flatbuffer_Attribute_HardOp: return 1;
    case flatbuffer_Attribute_Cast: return 1;
    case flatbuffer_Attribute_ImageMake: return 1;
    case flatbuffer_Attribute_Detpost: return 1;
    case flatbuffer_Attribute_Input: return 1;
    case flatbuffer_Attribute_Output: return 1;
    case flatbuffer_Attribute_SwapOrder: return 1;
    case flatbuffer_Attribute_Resize: return 1;
    case flatbuffer_Attribute_AlignAxis: return 1;
    case flatbuffer_Attribute_PruneAxis: return 1;
    case flatbuffer_Attribute_Reorg: return 1;
    case flatbuffer_Attribute_Add: return 1;
    case flatbuffer_Attribute_Multiply: return 1;
    case flatbuffer_Attribute_Yolo: return 1;
    case flatbuffer_Attribute_SegPost: return 1;
    case flatbuffer_Attribute_WarpAffine: return 1;
    default: return 0;
    }
}


struct flatbuffer_HardOp_table { uint8_t unused__; };

static inline size_t flatbuffer_HardOp_vec_len(flatbuffer_HardOp_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_HardOp_table_t flatbuffer_HardOp_vec_at(flatbuffer_HardOp_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_HardOp_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_HardOp)

__flatbuffers_define_scalar_field(0, flatbuffer_HardOp, sync_idx, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_HardOp, layer_count, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(2, flatbuffer_HardOp, hdop_instr_data, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_vector_field(3, flatbuffer_HardOp, hdop_param_data, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_scalar_field(4, flatbuffer_HardOp, hdop_instr_logic_addr, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(5, flatbuffer_HardOp, hdop_instr_physic_addr, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(6, flatbuffer_HardOp, hdop_param_addr, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct flatbuffer_Cast_table { uint8_t unused__; };

static inline size_t flatbuffer_Cast_vec_len(flatbuffer_Cast_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Cast_table_t flatbuffer_Cast_vec_at(flatbuffer_Cast_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Cast_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Cast)


struct flatbuffer_ImageMake_table { uint8_t unused__; };

static inline size_t flatbuffer_ImageMake_vec_len(flatbuffer_ImageMake_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_ImageMake_table_t flatbuffer_ImageMake_vec_at(flatbuffer_ImageMake_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_ImageMake_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_ImageMake)

__flatbuffers_define_scalar_field(0, flatbuffer_ImageMake, imk_reg_base, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_ImageMake, imk_input_port, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(2, flatbuffer_ImageMake, imk_pad_size, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_vector_field(3, flatbuffer_ImageMake, imk_pre_mean, flatbuffers_float_vec_t, 0)
__flatbuffers_define_vector_field(4, flatbuffer_ImageMake, imk_pre_scale, flatbuffers_float_vec_t, 0)
__flatbuffers_define_scalar_field(5, flatbuffer_ImageMake, imk_one_fast, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_scalar_field(6, flatbuffer_ImageMake, imk_input_bits, flatbuffers_int32, int32_t, INT32_C(0))

struct flatbuffer_Detpost_table { uint8_t unused__; };

static inline size_t flatbuffer_Detpost_vec_len(flatbuffer_Detpost_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Detpost_table_t flatbuffer_Detpost_vec_at(flatbuffer_Detpost_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Detpost_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Detpost)

__flatbuffers_define_scalar_field(0, flatbuffer_Detpost, detpost_layer_en, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_Detpost, detpost_chn_1st, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(2, flatbuffer_Detpost, detpost_chn_2nd, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(3, flatbuffer_Detpost, detpost_chn_3rd, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(4, flatbuffer_Detpost, detpost_anchor_num, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(5, flatbuffer_Detpost, detpost_cmp_chn, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(6, flatbuffer_Detpost, detpost_cmp_en, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(7, flatbuffer_Detpost, detpost_cmp_mask0, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(8, flatbuffer_Detpost, detpost_cmp_mask1, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(9, flatbuffer_Detpost, detpost_valid_chn, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_vector_field(10, flatbuffer_Detpost, detpost_data_thr, flatbuffers_int32_vec_t, 0)
__flatbuffers_define_scalar_field(11, flatbuffer_Detpost, detpost_reg_base, flatbuffers_uint64, uint64_t, UINT64_C(0))

struct flatbuffer_MInversedArray_table { uint8_t unused__; };

static inline size_t flatbuffer_MInversedArray_vec_len(flatbuffer_MInversedArray_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_MInversedArray_table_t flatbuffer_MInversedArray_vec_at(flatbuffer_MInversedArray_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_MInversedArray_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_MInversedArray)

__flatbuffers_define_vector_field(0, flatbuffer_MInversedArray, nums, flatbuffers_float_vec_t, 0)

struct flatbuffer_WarpAffine_table { uint8_t unused__; };

static inline size_t flatbuffer_WarpAffine_vec_len(flatbuffer_WarpAffine_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_WarpAffine_table_t flatbuffer_WarpAffine_vec_at(flatbuffer_WarpAffine_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_WarpAffine_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_WarpAffine)

__flatbuffers_define_vector_field(0, flatbuffer_WarpAffine, src_size, flatbuffers_int64_vec_t, 0)
__flatbuffers_define_vector_field(1, flatbuffer_WarpAffine, m_inversed, flatbuffer_MInversedArray_vec_t, 0)
__flatbuffers_define_scalar_field(2, flatbuffer_WarpAffine, flags, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(3, flatbuffer_WarpAffine, border_mode, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(4, flatbuffer_WarpAffine, border_value, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(5, flatbuffer_WarpAffine, sleep_time, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(6, flatbuffer_WarpAffine, pl_chunk_addr, flatbuffers_uint64, uint64_t, UINT64_C(0))

struct flatbuffer_Input_table { uint8_t unused__; };

static inline size_t flatbuffer_Input_vec_len(flatbuffer_Input_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Input_table_t flatbuffer_Input_vec_at(flatbuffer_Input_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Input_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Input)


struct flatbuffer_Output_table { uint8_t unused__; };

static inline size_t flatbuffer_Output_vec_len(flatbuffer_Output_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Output_table_t flatbuffer_Output_vec_at(flatbuffer_Output_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Output_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Output)


struct flatbuffer_SwapOrder_table { uint8_t unused__; };

static inline size_t flatbuffer_SwapOrder_vec_len(flatbuffer_SwapOrder_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_SwapOrder_table_t flatbuffer_SwapOrder_vec_at(flatbuffer_SwapOrder_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_SwapOrder_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_SwapOrder)

__flatbuffers_define_vector_field(0, flatbuffer_SwapOrder, order, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_scalar_field(1, flatbuffer_SwapOrder, axis, flatbuffers_int32, int32_t, INT32_C(0))

struct flatbuffer_Resize_table { uint8_t unused__; };

static inline size_t flatbuffer_Resize_vec_len(flatbuffer_Resize_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Resize_table_t flatbuffer_Resize_vec_at(flatbuffer_Resize_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Resize_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Resize)

__flatbuffers_define_vector_field(0, flatbuffer_Resize, size, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_scalar_field(1, flatbuffer_Resize, interpolation, flatbuffers_uint8, uint8_t, UINT8_C(0))

struct flatbuffer_AlignedUnit_table { uint8_t unused__; };

static inline size_t flatbuffer_AlignedUnit_vec_len(flatbuffer_AlignedUnit_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_AlignedUnit_table_t flatbuffer_AlignedUnit_vec_at(flatbuffer_AlignedUnit_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_AlignedUnit_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_AlignedUnit)

__flatbuffers_define_vector_field(0, flatbuffer_AlignedUnit, index, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_vector_field(1, flatbuffer_AlignedUnit, unit, flatbuffers_uint32_vec_t, 0)

struct flatbuffer_AlignAxis_table { uint8_t unused__; };

static inline size_t flatbuffer_AlignAxis_vec_len(flatbuffer_AlignAxis_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_AlignAxis_table_t flatbuffer_AlignAxis_vec_at(flatbuffer_AlignAxis_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_AlignAxis_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_AlignAxis)

__flatbuffers_define_vector_field(0, flatbuffer_AlignAxis, aligned_units, flatbuffer_AlignedUnit_vec_t, 0)

struct flatbuffer_PruneAxis_table { uint8_t unused__; };

static inline size_t flatbuffer_PruneAxis_vec_len(flatbuffer_PruneAxis_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_PruneAxis_table_t flatbuffer_PruneAxis_vec_at(flatbuffer_PruneAxis_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_PruneAxis_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_PruneAxis)

__flatbuffers_define_vector_field(0, flatbuffer_PruneAxis, index, flatbuffers_uint32_vec_t, 0)

struct flatbuffer_Reorg_table { uint8_t unused__; };

static inline size_t flatbuffer_Reorg_vec_len(flatbuffer_Reorg_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Reorg_table_t flatbuffer_Reorg_vec_at(flatbuffer_Reorg_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Reorg_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Reorg)

__flatbuffers_define_scalar_field(0, flatbuffer_Reorg, stride, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct flatbuffer_Add_table { uint8_t unused__; };

static inline size_t flatbuffer_Add_vec_len(flatbuffer_Add_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Add_table_t flatbuffer_Add_vec_at(flatbuffer_Add_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Add_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Add)

__flatbuffers_define_vector_field(0, flatbuffer_Add, alpha, flatbuffers_float_vec_t, 0)
__flatbuffers_define_vector_field(1, flatbuffer_Add, beta, flatbuffers_float_vec_t, 0)

struct flatbuffer_Multiply_table { uint8_t unused__; };

static inline size_t flatbuffer_Multiply_vec_len(flatbuffer_Multiply_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Multiply_table_t flatbuffer_Multiply_vec_at(flatbuffer_Multiply_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Multiply_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Multiply)


struct flatbuffer_Yolo_table { uint8_t unused__; };

static inline size_t flatbuffer_Yolo_vec_len(flatbuffer_Yolo_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Yolo_table_t flatbuffer_Yolo_vec_at(flatbuffer_Yolo_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Yolo_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Yolo)

__flatbuffers_define_vector_field(0, flatbuffer_Yolo, anchors, flatbuffers_float_vec_t, 0)
__flatbuffers_define_scalar_field(1, flatbuffer_Yolo, class_num, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(2, flatbuffer_Yolo, num, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(3, flatbuffer_Yolo, mask, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_scalar_field(4, flatbuffer_Yolo, max, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(5, flatbuffer_Yolo, scale_x_y, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(6, flatbuffer_Yolo, confidence_thresh, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(7, flatbuffer_Yolo, iou_thresh, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_scalar_field(8, flatbuffer_Yolo, beta_nms, flatbuffers_float, float, 0.00000000f)
__flatbuffers_define_string_field(9, flatbuffer_Yolo, nms_kind, 0)

struct flatbuffer_SegPost_table { uint8_t unused__; };

static inline size_t flatbuffer_SegPost_vec_len(flatbuffer_SegPost_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_SegPost_table_t flatbuffer_SegPost_vec_at(flatbuffer_SegPost_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_SegPost_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_SegPost)

__flatbuffers_define_scalar_field(0, flatbuffer_SegPost, mode, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_SegPost, src_ysize, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(2, flatbuffer_SegPost, src_xsize, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(3, flatbuffer_SegPost, dst_ysize, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(4, flatbuffer_SegPost, dst_xsize, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(5, flatbuffer_SegPost, align_corner, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_scalar_field(6, flatbuffer_SegPost, reg_base, flatbuffers_uint64, uint64_t, UINT64_C(0))

struct flatbuffer_Op_table { uint8_t unused__; };

static inline size_t flatbuffer_Op_vec_len(flatbuffer_Op_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Op_table_t flatbuffer_Op_vec_at(flatbuffer_Op_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Op_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Op)

__flatbuffers_define_scalar_field(0, flatbuffer_Op, compile_target, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_Op, op_id, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(2, flatbuffer_Op, ifms, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_vector_field(3, flatbuffer_Op, ofms, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_union_field(flatbuffers_, 5, flatbuffer_Op, attribute, flatbuffer_Attribute, 0)

struct flatbuffer_QuantizedType_table { uint8_t unused__; };

static inline size_t flatbuffer_QuantizedType_vec_len(flatbuffer_QuantizedType_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_QuantizedType_table_t flatbuffer_QuantizedType_vec_at(flatbuffer_QuantizedType_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_QuantizedType_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_QuantizedType)

__flatbuffers_define_vector_field(0, flatbuffer_QuantizedType, m, flatbuffers_int32_vec_t, 0)
__flatbuffers_define_vector_field(1, flatbuffer_QuantizedType, exp, flatbuffers_int32_vec_t, 0)
__flatbuffers_define_vector_field(2, flatbuffer_QuantizedType, origin_scale, flatbuffers_float_vec_t, 0)
__flatbuffers_define_scalar_field(3, flatbuffer_QuantizedType, axis, flatbuffers_int32, int32_t, INT32_C(-1))

struct flatbuffer_Normratio_table { uint8_t unused__; };

static inline size_t flatbuffer_Normratio_vec_len(flatbuffer_Normratio_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Normratio_table_t flatbuffer_Normratio_vec_at(flatbuffer_Normratio_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Normratio_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Normratio)

__flatbuffers_define_vector_field(0, flatbuffer_Normratio, data, flatbuffers_float_vec_t, 0)
__flatbuffers_define_scalar_field(1, flatbuffer_Normratio, axis, flatbuffers_int32, int32_t, INT32_C(-1))

struct flatbuffer_MergedAxisSection_table { uint8_t unused__; };

static inline size_t flatbuffer_MergedAxisSection_vec_len(flatbuffer_MergedAxisSection_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_MergedAxisSection_table_t flatbuffer_MergedAxisSection_vec_at(flatbuffer_MergedAxisSection_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_MergedAxisSection_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_MergedAxisSection)

__flatbuffers_define_scalar_field(0, flatbuffer_MergedAxisSection, s, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_MergedAxisSection, e, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct flatbuffer_MergedAxisDistr_table { uint8_t unused__; };

static inline size_t flatbuffer_MergedAxisDistr_vec_len(flatbuffer_MergedAxisDistr_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_MergedAxisDistr_table_t flatbuffer_MergedAxisDistr_vec_at(flatbuffer_MergedAxisDistr_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_MergedAxisDistr_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_MergedAxisDistr)

__flatbuffers_define_vector_field(0, flatbuffer_MergedAxisDistr, merged_axis, flatbuffers_uint32_vec_t, 0)
__flatbuffers_define_vector_field(1, flatbuffer_MergedAxisDistr, section, flatbuffer_MergedAxisSection_vec_t, 0)

struct flatbuffer_Ftmp_table { uint8_t unused__; };

static inline size_t flatbuffer_Ftmp_vec_len(flatbuffer_Ftmp_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Ftmp_table_t flatbuffer_Ftmp_vec_at(flatbuffer_Ftmp_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Ftmp_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Ftmp)

__flatbuffers_define_scalar_field(0, flatbuffer_Ftmp, dtype, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_Ftmp, mtype, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, flatbuffer_Ftmp, v_id, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(3, flatbuffer_Ftmp, addr, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(4, flatbuffer_Ftmp, size, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_vector_field(5, flatbuffer_Ftmp, shape, flatbuffers_int32_vec_t, 0)
__flatbuffers_define_string_field(6, flatbuffer_Ftmp, layout, 0)
__flatbuffers_define_vector_field(7, flatbuffer_Ftmp, param_data, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_vector_field(8, flatbuffer_Ftmp, merged_distrs, flatbuffer_MergedAxisDistr_vec_t, 0)
__flatbuffers_define_table_field(9, flatbuffer_Ftmp, normratio, flatbuffer_Normratio_table_t, 0)
__flatbuffers_define_table_field(10, flatbuffer_Ftmp, scale, flatbuffer_QuantizedType_table_t, 0)

struct flatbuffer_Network_table { uint8_t unused__; };

static inline size_t flatbuffer_Network_vec_len(flatbuffer_Network_vec_t vec)
__flatbuffers_vec_len(vec)
static inline flatbuffer_Network_table_t flatbuffer_Network_vec_at(flatbuffer_Network_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(flatbuffer_Network_table_t, vec, i, 0)
__flatbuffers_table_as_root(flatbuffer_Network)

__flatbuffers_define_scalar_field(0, flatbuffer_Network, mpe_rows, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(1, flatbuffer_Network, mpe_cols, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, flatbuffer_Network, mmu_mode, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_string_field(3, flatbuffer_Network, name, 0)
__flatbuffers_define_struct_field(4, flatbuffer_Network, segment, flatbuffer_Segment_struct_t, 0)
__flatbuffers_define_vector_field(5, flatbuffer_Network, ops, flatbuffer_Op_vec_t, 0)
__flatbuffers_define_vector_field(6, flatbuffer_Network, ftmps, flatbuffer_Ftmp_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* SERIALIZE_READER_H */
